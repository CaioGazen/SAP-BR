// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/10/2025 23:53:40"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          teste
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module teste_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg i11;
reg i22;
reg i33;
reg in;
reg out;
reg res;
// wires                                               
wire o1;
wire o2;
wire o3;
wire o11;
wire o22;
wire o33;

// assign statements (if any)                          
teste i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.i11(i11),
	.i22(i22),
	.i33(i33),
	.in(in),
	.o1(o1),
	.o2(o2),
	.o3(o3),
	.o11(o11),
	.o22(o22),
	.o33(o33),
	.out(out),
	.res(res)
);
initial 
begin 
#1000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #25000 1'b1;
	#25000;
end 

// in
initial
begin
	in = 1'b1;
	in = #60000 1'b0;
	in = #150000 1'b1;
end 

// res
initial
begin
	res = 1'b0;
	res = #620000 1'b1;
	res = #20000 1'b0;
end 

// out
initial
begin
	out = 1'b1;
	out = #420000 1'b0;
	out = #290000 1'b1;
end 

// i11
initial
begin
	i11 = 1'b0;
	i11 = #150000 1'b1;
	i11 = #100000 1'b0;
end 

// i22
initial
begin
	i22 = 1'b0;
	i22 = #150000 1'b1;
	i22 = #100000 1'b0;
end 

// i33
initial
begin
	i33 = 1'b0;
end 
endmodule

